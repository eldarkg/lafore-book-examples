// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// 15chapter_06exercise.cpp
// Имеется программа из упражнения 3 этой (15-й) главы. В ней пользователь
// задает список целых чисел, который программа переворачивает и выводит
// на экран. Для переворачивания списка используются два обычных (не обратных)
// итератора, проходящих список в цикле в противоположных направлениях.
// Требуется выполнить ту же задачу, но теперь вместо списка должен быть вектор,
// а для переворачивания его содержимого требуется использовать один обычный
// итератор, а другой — обратный.

#include <locale>
#include <iostream>
#include <vector>    // для контейнера vector
using namespace std;

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));
	// переключение стандартного потока ввода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));
	
	vector<int> vint; // вектор целых чисел
	int n;            // для целых чисел, получаемых от пользователя
	wchar_t answer;   // символ для ответа пользователя (д/н)

	// получим от пользователя целые числа и поместим их в вектор
	do {
		wcout << L"Введите целое число: ";
		wcin >> n;
		vint.push_back(n);
		wcout << L"Ещё? (д/н) ";
		wcin >> answer;
	} while (answer != L'н');

	// создадим два итератора: обычный и обратный; инициализируем их
	vector<int>::iterator fw_iter;
	vector<int>::reverse_iterator bw_iter;
	fw_iter = vint.begin();  // от начала к концу
	bw_iter = vint.rbegin(); // от конца к началу

	// в цикле пройдем вектор, меняя противостоящие элементы местами
	for (int i = 0; i < vint.size() / 2; i++)
		swap(*fw_iter++, *bw_iter++);

	// выведем список на экран
	wcout << L"\nПеревернутый вектор: ";
	for (fw_iter = vint.begin(); fw_iter != vint.end(); fw_iter++)
		wcout << *fw_iter << L' ';

	wcout << endl;

	return 0;
}