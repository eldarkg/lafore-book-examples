// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// 15chapter_03exercise.cpp
// Исходные данные задаются списком целых чисел. Требуется перевернуть
// числа в списке так, чтобы первое и последнее числа поменялись местами,
// второе и предпоследнее числа тоже поменялись местами и так далее. Для
// этого требуется использовать цикл while, в котором нужно использовать
// два обычных (не обратных) итератора, проходящих список. Один — от начала
// к концу, другой — от конца к началу. Для обмена элементов требуется
// использовать шаблонную функцию (алгоритм) swap.

// В конце задания в книге предлагается заглянуть в заголовочный файл
// <algorithm>, чтобы посмотреть, как эксперты сделали то же самое, что
// и мы, выполняя это упражнение, при реализации шаблонной функции (алгоритма)
// reverse. Однако, в среде «Visual Studio Community 2017» эта функция определена
// не в заголовочном файле <algorithm>, а в заголовочном файле <xutility>.
// И разобраться в том, что там написано, очень сложно.

#include <locale>
#include <iostream>
#include <list>      // для контейнера list
using namespace std;

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));
	// переключение стандартного потока ввода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));
	
	list<int> lint; // список целых чисел
	int n;          // для целых чисел, получаемых от пользователя
	wchar_t answer; // символ для ответа пользователя (д/н)

	// получим от пользователя целые числа и поместим их в список
	do {
		wcout << L"Введите целое число: ";
		wcin >> n;
		lint.push_back(n);
		wcout << L"Ещё? (д/н) ";
		wcin >> answer;
	} while (answer != L'н');

	// создадим два обычных (не обратных) итератора и инициализируем их
	list<int>::iterator fw_iter, bw_iter;
	fw_iter = lint.begin(); // от начала к концу
	bw_iter = lint.end();   // от конца к началу

	// в цикле пройдем список, меняя противостоящие элементы местами
	int count = 0; // число обменов
	while (count++ < lint.size() / 2)
		swap(*fw_iter++, *--bw_iter);

	// В коде выше вместо цикла while при обменах логичнее использовать цикл for,
	// но я использовал цикл while, раз так требуется в задании.

	// выведем список на экран
	wcout << L"\nПеревернутый список: ";
	for (fw_iter = lint.begin(); fw_iter != lint.end(); fw_iter++)
		wcout << *fw_iter << L' ';

	wcout << endl;

	return 0;
}