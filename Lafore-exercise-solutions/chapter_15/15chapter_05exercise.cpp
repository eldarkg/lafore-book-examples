// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// 15chapter_05exercise.cpp
// Требуется создать массив и заполнить его четными числами. Требуется создать
// множество и заполнить его нечетными числами. Требуется с помощью алгоритма
// merge объединить полученные массив и множество чисел в вектор. Требуется
// вывести содержимое вектора на экран, чтобы показать, что объединение прошло
// правильно.

// Четные и нечетные числа — это целые числа, которые могут быть как
// отрицательными, так и положительными. Число 0 (ноль) является четным.
// Количество четных и нечетных чисел бесконечно. Очевидно, что невозможно
// заполнить массив и множество всеми четными и нечетными числами. Это
// количество следует ограничить, но в задании этого не сделано. Для
// заполнения массива и множества я возьму ограниченный диапазон целых
// чисел, куда войдут четные и нечетные положительные и отрицательные числа,
// включая 0 (ноль).

#include <locale>
#include <iostream>
#include <set>       // для контейнера set
#include <vector>    // для контейнера vector
#include <algorithm> // для алгоритма merge
using namespace std;

const int evenSIZE = 7;  // размер массива с четными числами
const int oddSIZE = 12;  // размер множества с нечетными числами
const int evenBEG = -10; // первое число диапазона четных чисел
const int oddBEG = -5;   // первое число диапазона нечетных чисел

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));
	
	// создаём массив и заполняем его четными числами
	int evenArr[evenSIZE];
	for (int i = 0; i < evenSIZE; i++)
		evenArr[i] = evenBEG + 2 * i;

	// создаём множество и заполняем его нечетными числами
	set<int> oddSet;
	for (int i = 0; i < oddSIZE; i++)
		oddSet.insert(oddBEG + 2 * i);
	
	// создаём вектор
	vector<int> Vect(evenSIZE + oddSIZE);

	// объединяем массив и множество в вектор
	merge(evenArr, evenArr + evenSIZE, oddSet.begin(), oddSet.end(), Vect.begin());

	// выводим содержимое вектора на экран
	wcout << L"Содержимое вектора (" << Vect.size() << L" элементов): ";
	for (int i = 0; i < Vect.size(); i++)
		wcout << Vect[i] << L' ';

	wcout << endl;

	return 0;
}