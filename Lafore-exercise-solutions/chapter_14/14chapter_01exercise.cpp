// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// 14chapter_01exercise.cpp
// Требуется написать шаблон функции, возвращающей среднее арифметическое всех
// элементов массива. В функции main требуется проверить этот шаблон с типами
// int, long, double и char (я еще добавил тип wchar_t).

#include <locale>
#include <iostream>
using namespace std;

template <class T>                 // шаблон функции
T average(T* array, int size)
{
	double sum = 0;                // узкое место: тип суммы лучше
	                               // не задавать как <T>, потому что
	                               // сумма значений типа <T> может легко
	                               // выйти за предел максимального значения
	                               // типа <T>; поэтому я задал как double
	for (int j = 0; j < size; j++)
		sum += array[j];
	return sum / size;
}

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));

	int intArr[] = { 2, -3, 5, 7 };             // проверка с типом int
	wcout << average(intArr, 4) << endl;

	long lonArr[] = { 13L, 7L, 11L, -5L, 17L }; // проверка с типом long
	wcout << average(lonArr, 5) << endl;

	double dubArr[] = { 12.1, 3.024, -0.56 };   // проверка с типом double
	wcout << average(dubArr, 3) << endl;

	char chaArr[] = "Ilya";                     // проверка с типом char
	// аналог { 'I', 'l', 'y', 'a', '\0' }
	// аналог { 73, 108, 121, 97, 0 }           // Юникод, десятичные коды
	wcout << average(chaArr, 5) << L" (код этого символа "
		<< (int) average(chaArr, 5) << L")" << endl;

	wchar_t wchArr[] = L"Илья";                 // проверка с типом wchar_t
	// аналог { L'И', L'л', L'ь', L'я', L'\0' }
	// аналог { 1048, 1083, 1100, 1103, 0 }     // Юникод, десятичные коды
	wcout << average(wchArr, 5) << L" (код этого символа "
		<< (int) average(wchArr, 5) << L")" << endl;

	// вычисления:
	// int: (2 - 3 + 5 + 7) / 4 = 11 / 4 = 2.75 = 2
	//     (дробная часть отбрасывается)
	// long: (13 + 7 + 11 - 5 + 17) / 5 = 43 / 5 = 8.6 = 8
	//     (дробная часть отбрасывается)
	// double: (12.1 + 3.024 - 0.56) / 3 = 14.564 / 3 = 4.8546666(6) = 4.85467
	//     (по умолчанию в консоль выводится шесть знаков десятичной дроби;
	//      если в дроби больше знаков, она округляется до шести знаков)
	// char: (73 + 108 + 121 + 97 + 0) / 5 = 399 / 5 = 79.8 = 79
	//     (дробная часть отбрасывается)
	// wchar_t: (1048 + 1083 + 1100 + 1103 + 0) / 5 = 4334 / 5 = 866.8 = 866
	//     (дробная часть отбрасывается)

	// должно быть выведено на экран в консоль:
	// 2
	// 8
	// 4.85467
	// O (код этого символа 79)
	// ? (код этого символа 866)

	// O — латинская заглавная буква «O» (не ноль), ее десятичный код в Юникоде
	// равен 79

	// ? — этот символ не имеет отображения в шрифте, который в данный момент
	// использует консоль, поэтому он отображен вопросительным знаком; в Юникоде
	// символ с десятичным кодом 866 называется «Комбинируемая подстрочная
	// двойная стрелка вправо» (по-английски «Combining Double Rightwards
	// Arrow Below»)

	return 0;
}