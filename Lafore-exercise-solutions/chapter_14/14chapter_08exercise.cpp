// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// 14chapter_08exercise.cpp
// Имеется класс safearray из примера 333_arrover3.cpp главы 8. Этот
// класс реализует «безопасный» массив, проверяющий правильность
// задаваемых ему индексов. Требуется добавить в него класс исключения,
// чтобы при выходе индекса за границы правильного диапазона класс
// safearray генерировал исключение. В программе main требуется
// продемонстрировать работу исключения и выдать соответствующее сообщение
// об ошибке.

#include <locale>
#include <iostream>
using namespace std;

const int LIMIT = 3; // размер массива

class safearray // класс, реализующий «безопасный» массив
{
private:
	int arr[LIMIT];
public:
	class IndexOut {};           // класс исключения

	// обратите внимание, что функция возвращает ссылку!
	int& operator[] (int n)
	{
		if (n < 0 || n >= LIMIT) // при выходе индекса за границы диапазона
			throw IndexOut();    // генерируем исключение
		return arr[n];
	}
};

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));

	try
	{
		safearray sar;
		// sar[-1] = 34;                       // ошибка в индексе
		sar[0] = -98; sar[1] = 0; sar[2] = 21; // операция индекса слева от присваивания
		// sar[3] = 66;                        // ошибка в индексе
		int temp;
		temp = sar[0];                         // операция индекса справа от присваивания
		wcout << L"int: " << temp << L' ' << sar[1] << L' ' << sar[2] << endl;
	}
	catch (safearray::IndexOut)
	{
		wcout << L"Ошибочный индекс!\n"; exit(1);
	}

	return 0;
}