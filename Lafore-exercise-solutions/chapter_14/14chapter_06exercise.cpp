// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// 14chapter_06exercise.cpp
// Имеется класс safearray из примера 333_arrover3.cpp главы 8. Этот
// класс реализует «безопасный» массив, проверяющий правильность
// задаваемых ему индексов. Требуется преобразовать этот класс в шаблон так,
// чтобы объект этого класса мог хранить данные любого числового базового
// типа. После этого требуется в функции main создать объекты классов,
// полученных из созданного шаблона, и проверить их работу с данными разных
// типов (я выбрал int, double и wchar_t).

#include <locale>
#include <iostream>
using namespace std;

const int LIMIT = 3; // размер массива

template<class T>    // шаблон
class safearray      // класса, реализующий «безопасный» массив
{
private:
	T arr[LIMIT];
public:
	// обратите внимание, что функция возвращает ссылку!
	T& operator[] (int n)
	{
		if (n < 0 || n >= LIMIT)
			{ wcout << L"Ошибочный индекс!\n"; exit(1); }
		return arr[n];
	}
};

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));

	safearray<int> ari;
	// ari[-1] = 34;                       // ошибка в индексе
	ari[0] = -98; ari[1] = 0; ari[2] = 21; // операция индекса слева от присваивания
	// ari[3] = 66;                        // ошибка в индексе
	int tempi;
	tempi = ari[0];                        // операция индекса справа от присваивания
	wcout << L"int: " << tempi << L' ' << ari[1] << L' ' << ari[2] << endl;

	safearray<double> ard;
	// ard[-1] = 0.34;                            // ошибка в индексе
	ard[0] = -98.2; ard[1] = 0.0; ard[2] = 21.01; // операция индекса слева от присваивания
	// ard[3] = -66.021;                          // ошибка в индексе
	double tempd;
	tempd = ard[0];                               // операция индекса справа от присваивания
	wcout << L"double: " << tempd << L' ' << ard[1] << L' ' << ard[2] << endl;

	safearray<wchar_t> arw;
	// arw[-1] = L'й';                           // ошибка в индексе
	arw[0] = L'И'; arw[1] = L'р'; arw[2] = L'а'; // операция индекса слева от присваивания
	// arw[3] = L'ы';                            // ошибка в индексе
	wchar_t tempw;
	tempw = arw[0];                              // операция индекса справа от присваивания
	wcout << L"wchar_t: " << tempw << L' ' << arw[1] << L' ' << arw[2] << endl;

	return 0;
}