// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// 12chapter_05exercise.cpp
// Требуется создать класс time, включающий поля для часов, минут и секунд.
// Написать для этого класса метод get_time для получения значения времени от
// пользователя. Написать метод put_time, выводящий на экран время в формате
// 23:59:59. В методе get_time должна быть написана проверка введенных
// пользователем значений на ошибки. В функции main требуется написать цикл,
// в котором нужно запрашивать у пользователя ввод значений времени.

#include <locale>
#include <iostream>
using namespace std;

class time // класс, представляющий значение времени
{
private:
	int hours;   // часы (0-23)
	int minutes; // минуты (0-59)
	int seconds; // секунды (0-59)
public:
	void get_time(); // получить значение времени у пользователя
	void put_time(); // вывести значение времени на экран
};

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));
	// переключение стандартного потока ввода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));
	
	time t;     // значение времени
	wchar_t ch; // для ответа пользователя (д/н)

	// получим от пользователя значение времени и выведем его на экран
	do {
		t.get_time();
		t.put_time(); wcout << endl;
		// запрашиваем пользователя об окончании ввода
		wcout << L"\nПродолжить ввод (д/н)? ";
		wcin >> ch;
		wcin.ignore(80, L'\n'); // удалить лишние символы из потока
	} while (ch == L'д'); // выход по 'н'

	return 0;
}

void time::get_time() // получить значение времени у пользователя
{
	// ПОЛУЧЕНИЕ ЧАСОВ
	while (true) // бесконечный цикл (выход — с помощью оператора break)
	{
		wcout << L"Введите часы: ";
		wcin.unsetf(ios::skipws); // не пропускать ведущие пробельные символы
		wcin >> hours;
		if (wcin.good())  // если введенное значение является числом, то
		{
			if (hours >= 0 && hours <= 23) // если число входит в нужный диапазон
			{
				wcin.ignore(80, L'\n');    // удалить лишние символы из потока
				break;                     // выйти из цикла
			}
			else                           // число не входит в нужный диапазон
				wcout << L"Значение часов должно лежать между 0 и 23!\n";
		}
		else              // иначе, если введенное значение не является числом
		{
			wcin.clear(); // очистить биты ошибок
			wcout << L"Неправильно введены часы!\n";
		}
		wcin.ignore(80, L'\n'); // удалить лишние символы из потока
	}
	// ПОЛУЧЕНИЕ МИНУТ
	while (true) // бесконечный цикл (выход — с помощью оператора break)
	{
		wcout << L"Введите минуты: ";
		wcin.unsetf(ios::skipws); // не пропускать ведущие пробельные символы
		wcin >> minutes;
		if (wcin.good())  // если введенное значение является числом, то
		{
			if (minutes >= 0 && minutes <= 59) // если число входит в диапазон
			{
				wcin.ignore(80, L'\n');    // удалить лишние символы из потока
				break;                     // выйти из цикла
			}
			else                           // число не входит в нужный диапазон
				wcout << L"Значение минут должно лежать между 0 и 59!\n";
		}
		else              // иначе, если введенное значение не является числом
		{
			wcin.clear(); // очистить биты ошибок
			wcout << L"Неправильно введены минуты!\n";
		}
		wcin.ignore(80, L'\n'); // удалить лишние символы из потока
	}
	// ПОЛУЧЕНИЕ СЕКУНД
	while (true) // бесконечный цикл (выход — с помощью оператора break)
	{
		wcout << L"Введите секунды: ";
		wcin.unsetf(ios::skipws); // не пропускать ведущие пробельные символы
		wcin >> seconds;
		if (wcin.good())  // если введенное значение является числом, то
		{
			if (seconds >= 0 && seconds <= 59) // если число входит в диапазон
			{
				wcin.ignore(80, L'\n');    // удалить лишние символы из потока
				break;                     // выйти из цикла
			}
			else                           // число не входит в нужный диапазон
				wcout << L"Значение секунд должно лежать между 0 и 59!\n";
		}
		else              // иначе, если введенное значение не является числом
		{
			wcin.clear(); // очистить биты ошибок
			wcout << L"Неправильно введены секунды!\n";
		}
		wcin.ignore(80, L'\n'); // удалить лишние символы из потока
	}
}

void time::put_time() // вывести значение времени на экран
{
	wcout << L"Время = "
		<< ((hours < 10) ? L"0" : L"")   << hours << L":"
		<< ((minutes < 10) ? L"0" : L"") << minutes << L":"
		<< ((seconds < 10) ? L"0" : L"") << seconds;
}