// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// 06chapter_03exercise.cpp
// создать класс time, представляющий момент (или отрезок) времени в часах, минутах и секундах

#include <locale>
#include <iostream>
using namespace std;

class time // класс, представляющий время
{
private:
	int hours;   // часы
	int minutes; // минуты
	int seconds; // секунды
public:
	// конструктор без параметров, инициализирующий поля нулями
	time() : hours(0), minutes(0), seconds(0)
		{ }
	// конструктор с параметрами, инициализирующий поля заданными значениями
	time(int h, int m, int s) : hours(h), minutes(m), seconds(s)
		{ }
	// константный метод выводит значения полей на экран
	void display() const
		{ wcout << hours << L":" << minutes << L":" << seconds; }
	// метод (прототип), складывающий два заданных значения времени и сохраняющий результат
	// в поля объекта, от которого вызван метод
	void add(time, time);
};

// метод класса time, складывающий два заданных значения времени и сохраняющий результат
// в поля объекта, от которого вызван метод
void time::add(time t1, time t2)
{
	long totalsecs; // для хранения времени в секундах
	// переводим заданные значения времени в секунды и складываем
	totalsecs = t1.hours * 3600 + t1.minutes * 60 + t1.seconds +
	            t2.hours * 3600 + t2.minutes * 60 + t2.seconds;
	// переводим сумму секунд обратно в часы, минуты и секунды и сохраняем в поля текущего объекта
	hours =    totalsecs / 3600;
	minutes = (totalsecs % 3600) / 60;
	seconds = (totalsecs % 3600) % 60;
}

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));

	// создание двух инициализированных константных объектов класса time
	const time t1(16, 30, 45),
		       t2( 5, 50, 20);
	// создание объекта класса time с полями, инициализированными нулями
	time t3;

	// складываем два объекта-значения времени и присваиваем результат третьему объекту
	t3.add(t1, t2);

	// выводим третий объект (результат сложения) на экран
	wcout << L"Результат: "; t3.display(); wcout << endl;

	return 0;
}