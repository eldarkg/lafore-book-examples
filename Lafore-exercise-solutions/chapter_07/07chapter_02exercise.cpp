// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// 07chapter_02exercise.cpp
// создать класс employee (служащий), который содержит имя (класса wstring) и номер
// служащего, с методами getdata и putdata; написать программу, использующую этот класс

#include <locale>
#include <iostream>
#include <iomanip> // для манипулятора setw
#include <string> // для стандартного класса string в языке C++
using namespace std;

class employee // класс, представляющий служащего
{
private:
	long number;  // номер служащего
	wstring name; // имя служащего
public:
	// метод для получения данных от пользователя
	void getdata()
	{
		wcout << L"Введите номер и имя служащего: ";
		// предполагается, что имя служащего не содержит пробелов
		wcin >> number >> name;
	}
	// метод для вывода данных на экран
	void putdata()
	{
		wcout << setw(5) << number << L" " << name << endl;
	}
};

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));
	// переключение стандартного потока ввода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));

	const int MAX = 100; // количество элементов в массиве
	employee emp[MAX];   // массив служащих
	wchar_t ch;          // для ответа на вопрос о продолжении ввода
	int i = 0;           // индекс массива при вводе данных
	
	// получаем данные от пользователя
	do {
		
		if (i == MAX) // при переполнении массива
		{
			wcout << L"Нельзя ввести больше " << MAX << L" служащих!" << endl;
			break; // выйти из цикла
		}
		
		emp[i++].getdata(); // получить данные служащего от пользователя

		wcout << L"Продолжить ввод (д/н)? "; wcin >> ch;
	} while (ch != L'н');

	wcout << endl; // отделяем пустой строкой

	// выводим данные служащих на экран
	wcout << L"Список служащих компании:\n\n";
	wcout << L"Номер " << L"Имя" << endl;
	wcout << L"---------------------\n";
	for (int j = 0; j < i; j++)
		emp[j].putdata();

	return 0;
}