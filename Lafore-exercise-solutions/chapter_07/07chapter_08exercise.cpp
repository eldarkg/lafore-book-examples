// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// 07chapter_08exercise.cpp
// написать класс safearay, реализующий "надежный" массив, где под надежностью
// подразумевается, что при записи элемента в массив или получении значения
// определенного элемента из массива будут выполнены проверки, не нарушаются
// ли границы массива; написать программу, демонстрирующую работу этого класса

#include <locale>
#include <iostream>
using namespace std;

class safearay // класс, реализующий безопасную работу с массивом
{
private:
	static const int LIMIT = 10; // количество элементов массива
								 // (одна константа для всех объектов, статическая)
	int sar[LIMIT];              // сам массив с фиксированным числом элементов
public:
	// метод записывает заданное значение элемента в массив по заданному индексу
	void putel(int index, int el); // прототип
	// метод возвращает значение элемента, имеющего заданный индекс
	int getel(int index); // прототип
};

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));
	// переключение стандартного потока ввода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));

	safearay sa1;        // объект класса safearay (безопасный массив)
	int temp = 12345;    // тестовое число для записи в массив

	sa1.putel(7, temp);  // помещаем значение temp в массив
	temp = sa1.getel(7); // получаем значение из массива

	sa1.putel(-5, temp); // должно быть выдано сообщение об ошибке
	sa1.putel(10, temp); // должно быть выдано сообщение об ошибке

	temp = sa1.getel(11); // должно быть выдано сообщение об ошибке и
	                      // программа должна быть завершена

	return 0;
}

// метод записывает заданное значение элемента в массив по заданному индексу
// с проверкой, не выходит ли индекс за границы массива
void safearay::putel(int index, int el)
{
	if ((index >= 0) && (index < LIMIT))
		sar[index] = el;
	else
		wcout << L"Запись в массив не выполнена, так как индекс " << index
		      << L" выходит за пределы 0.." << LIMIT - 1 << endl;
}

// метод возвращает значение элемента, имеющего заданный индекс
// с проверкой, не выходит ли индекс за границы массива
int safearay::getel(int index)
{
	if ((index >= 0) && (index < LIMIT))
		return sar[index];
	else
	{
		wcout << L"Элемент массива нельзя получить, так как индекс " << index
			  << L" выходит за пределы 0.." << LIMIT - 1 << endl;
		exit(1); // завершение работы программы с ошибкой
	}
}