// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// 07chapter_01exercise.cpp
// написать функцию reversit, переворачивающую заданную строку,
// написать программу для демонстрации работы этой функции

#include <locale>
#include <iostream>
// #include <cstring> // для функции wcslen (длина строки в символах) не понадобился
using namespace std;

// функция переворачивает заданную строку
void reversit(wchar_t []); // прототип функции

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));
	// переключение стандартного потока ввода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));

	const int MAX = 80; // максимальная длина строки
	wchar_t s[MAX];     // для строки, получаемой от пользователя

	wcout << L"Введите строку:\n";
	wcin.get(s, MAX); // получаем строку с пробелами

	reversit(s); // переворачиваем строку

	// выводим результат на экран
	wcout << L"Результат перевертывания:\n" << s << endl;

	return 0;
}

// функция переворачивает заданную строку
void reversit(wchar_t str[])
{
	// Для переворачивания строки нужно поменять зеркально левую и правую половины строки,
	// то есть количество обменов символов будет равно длине строки, разделенной на 2.
	// При четном количестве символов в строке в обменах поучаствуют все символы,
	// при нечетном — символ в середине строки останется на своем месте.
	
	// Длина строки, разделенная на два: wcslen(str) / 2. Нам нужно, чтобы результат
	// от деления получался целым, а дробная часть отбрасывалась. Так и происходит,
	// ведь функция wcslen возвращает значение типа size_t, которое является
	// беззнаковым целым, делитель 2 тоже представляет собой целое, поэтому результат
	// по правилам преобразования типов данных в C++ будет целым.

	// в выражении (i < wcslen(str) / 2) скобки вокруг (wcslen(str) / 2) не обязательны,
	// так как арифметические операции имеют приоритет над операциями отношения

	for (int i = 0; i < wcslen(str) / 2; i++)
	{
		// обменяем символы из левой и правой половин строки:
		// str[i] — символ из левой половины строки,
		// str[wcslen(str) - i - 1] — символ из правой половины строки
		wchar_t temp = str[i];
		str[i] = str[wcslen(str) - i - 1];
		str[wcslen(str) - i - 1] = temp;
	}
}