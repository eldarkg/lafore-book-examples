// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// 05chapter_06exercise.cpp
// ---------------------------------
// Задание из 11 упражнения главы 4:
// Используя структуру, представляющую время, с тремя полями: часы, минуты и секунды,
// получить у пользователя два значения времени в формате 12:59:59, сохранить их в
// структурные переменные. Перевести оба значения в секунды, сложить, перевести результат
// обратно в формат 12:59:59 и сохранить в структурную переменную, вывести на экран.
// ---------------------------------
// Задание из 6 упражнения главы 5:
// Модифицировать программу из 11 упражнения главы 4 так, чтобы она использовала две функции:
// time_to_secs принимает структурное значение типа time, возвращает эквивалент в секундах типа long;
// secs_to_time принимает значение типа long в секундах, возвращает эквивалент типа time

#include <locale>
#include <iostream>
using namespace std;

struct time // время
{
	int hours;   // часы
	int minutes; // минуты
	int seconds; // секунды
};

long time_to_secs(time t); // прототипы функций
time secs_to_time(long s);

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));
	// переключение стандартного потока ввода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));

	time t, t1, t2; // три переменные для хранения времени в часах, минутах и секундах
	long totalsecs; // для хранения времени в секундах
	wchar_t colon;  // для двоеточия

	// получаем два значения времени от пользователя с клавиатуры
	wcout << L"Введите время в часах, минутах и секундах (через двоеточие): ";
	wcin >> t1.hours >> colon >> t1.minutes >> colon >> t1.seconds;
	wcout << L"Введите время в часах, минутах и секундах (через двоеточие): ";
	wcin >> t2.hours >> colon >> t2.minutes >> colon >> t2.seconds;

	// переводим полученные значения времени в секунды и складываем
	totalsecs = time_to_secs(t1) + time_to_secs(t2);

	// переводим сумму секунд обратно в часы, минуты и секунды и сохраняем в структурную переменную
	t = secs_to_time(totalsecs);

	// выводим результат на экран в исходном формате
	wcout << L"Сумма этих двух значений времени: "
		  << t.hours << L":" << t.minutes << L":" << t.seconds << endl;

	return 0;
}

// функция переводит время, заданное в часах, минутах и секундах, в эквивалент в секундах
long time_to_secs(time t)
{
	return (t.hours * 3600 + t.minutes * 60 + t.seconds);
}

// функция переводит время, заданное в секундах, в часы, минуты и секунды 
time secs_to_time(long s)
{
	time res;
	res.hours = s / 3600;
	res.minutes = (s % 3600) / 60;
	res.seconds = (s % 3600) % 60;
	return res;
}