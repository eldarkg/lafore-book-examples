// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// sstrcom.cpp
// сравнение строк с помощью стандартного класса string

#include <locale>
#include <iostream>
#include <string> // для стандартного класса string в языке C++
using namespace std;

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));
	// переключение стандартного потока ввода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));

	wstring aName = L"Иван";
	wstring userName;

	// демонстрация сравнения строк стандартного класса string
	// с помощью обычных операций сравнения (==, < и т.п.)
	wcout << L"Введите ваше имя: ";
	wcin >> userName;
	if (userName == aName)
		wcout << L"Привет, Иван\n";
	else if (userName < aName)
		wcout << L"Ваше имя идет до имени Иван\n"; // имеется в виду — по алфавиту
	else
		wcout << L"Ваше имя идет после имени Иван\n";

	// демонстрация использования для сравнения строк метода compare;
	// 1-й аргумент — индекс символа в строке userName, с которого начинается сравнение,
	// 2-й аргумент — максимальное кол-во символов из строки userName, которое будет сравниваться,
	// 3-й аргумент — строка, с которой будет сравниваться строка userName,
	// 4-й и 5-й аргументы — аналоги 1-го и 2-го, только для строки из 3-го параметра (aName),
	// в итоге получается, что здесь сравниваются 2 первых символа из строк userName и aName
	int n = userName.compare(0, 2, aName, 0, 2);
	wcout << L"Первые две буквы вашего имени ";
	// анализируем результат сравнения:
	// метод compare возвращает 0, если сравниваемые части строк userName и aName равны,
	// возвращает отрицательное значение, если часть строки userName меньше части строки aName,
	// возвращает положительное значение, если часть строки userName больше части строки aName
	if (n == 0)
		wcout << L"совпадают с \"";
	else if (n < 0)
		wcout << L"идут до \"";
	else
		wcout << L"идут после \"";
	// метод substr возвращает подстроку, начинающуюся с символа с индексом 0 исходной строки aName,
	// копируется 2 символа
	wcout << aName.substr(0, 2) << L'"' << endl;

	return 0;
}