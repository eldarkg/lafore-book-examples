// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// englaray.cpp
// массив объектов класса, представляющего интервал в английских футах и дюймах

#include <locale>
#include <iostream>
using namespace std;

class Distance // класс, представляющий интервал в английских футах и дюймах
{
private:
	int feet;     // футы (1 фут = 12 дюймов)
	float inches; // дюймы
public:
	void getdist() // получение данных класса от пользователя
	{
		wcout << L"Введите футы: "; wcin >> feet;
		wcout << L"Введите дюймы: "; wcin >> inches;
	}
	void showdist() const // вывод данных класса на экран
		{ wcout << feet << L"\'-" << inches << L'\"'; }
};

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));
	// переключение стандартного потока ввода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));

	const int MAX = 100; // количество элементов в массиве
	Distance dist[MAX];  // массив объектов класса Distance
	int n = 0;           // счетчик введенных пользователем объектов
	wchar_t ans;         // ответ пользователя (д/н)
	
	// получим интервалы в английской системе мер от пользователя
	do
	{
		// проверка на переполнение массива
		if (n >= MAX)
		{
			wcout << L"Массив полон!!!";
			break;
		}

		wcout << L"Введите интервал номер " << n + 1 << L": " << endl;
		dist[n++].getdist(); // получаем и сохраняем интервал
		
		wcout << L"Продолжить ввод (д/н)? ";
		wcin >> ans;
	} while (ans != L'н'); // продолжать, пока не будет введено 'н' (нет)
	
	wcout << endl; // отделим пустой строкой

	// выведем полученные выше объекты на экран
	for (int j = 0; j < n; j++)
	{
		wcout << L"Интервал номер " << j + 1 << L": ";
		dist[j].showdist();
		wcout << endl;
	}

	return 0;
}