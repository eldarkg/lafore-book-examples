// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// strplus.cpp
// перегрузка операции бинарного сложения (+) для строк

// для использования небезопасных функций wcscpy и wcscat
#define _CRT_SECURE_NO_WARNINGS

#include <locale>
#include <iostream>
using namespace std;
// #include <string.h> // для функций wcscpy, wcslen и wcscat не понадобился
// #include <stdlib.h> // для функции exit не понадобился

class String // класс, представляющий строку (массив символов)
{
private:
	// enum { SZ = 80 }; // максимальный размер строки (нестандартный синтаксис)
	static const int SZ = 80; // максимальный размер строки
							  // (одна константа для всех объектов, статическая)
	wchar_t str[SZ];          // сама строка
public:
	String() // конструктор без параметров
		{ str[0] = L'\0'; }
	String(const wchar_t s[]) // конструктор с одним параметром
	{
		wcscpy(str, s);
		// wcscpy_s(str, SZ, s); // рекомендуемый более безопасный вариант
	}
	void display() const // показ строки на экране
		{ wcout << str; }
	// оператор сложения
	String operator+ (String s) const
	{
		String temp; // временная переменная
		if (wcslen(str) + wcslen(s.str) < SZ)
		{
			wcscpy(temp.str, str);            // копируем содержимое первой строки
			// wcscpy_s(temp.str, SZ, str);   // (рекомендуемый более безопасный вариант)
			wcscat(temp.str, s.str);          // добавляем содержимое второй строки
			// wcscat_s(temp.str, SZ, s.str); // (рекомендуемый более безопасный вариант)
		}
		else
		{
			wcout << L"\nПереполнение!";
			exit(1);
		}
		return temp; // возвращаем результат
	}
};

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));

	String s1(L"С Рождеством! ");  // конструктор с одним параметром
	String s2 = L"С Новым годом!"; // аналогично, но в другой форме
	String s3;                     // конструктор без параметров

	// в объекте-строке s1 при определении последним символом идет пробел, чтобы
	// в дальнейшем (см. ниже) при сложении строк две фразы разделились пробелом,
	// а слова не слепились вместе

	s1.display(); // показываем все строки
	s2.display();
	s3.display();
	wcout << endl;
	
	s3 = s1 + s2; // присваиваем строке s3 результат сложения строк s1 и s2
		
	s3.display(); // показываем результат
	wcout << endl;

	return 0;
}