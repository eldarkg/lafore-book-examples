// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// ezprint.cpp
// простой вывод на принтер
// (точнее, на устройство PRN — первый параллельный порт)

#include <locale>
#include <fstream>   // для работы с потоками, связанными с файлами
#include <iostream>
using namespace std;

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));

	// данные, которые будем печатать — строка и целое число
	const char* s1 = "\nToday's winning number is ";
	int n1 = 17982;

	// Данная программа взята из 4-й редакции учебника Лафоре, опубликованной примерно
	// в 2001 году. Сегодня, в 2020 году, я работаю в операционной системе Windows 7
	// и не знаю, можно ли еще пользоваться в этой системе указанным здесь способом
	// (через "PRN") печати на принтер, подключенный к первому параллельному порту,
	// так как не могу это проверить из-за того, что у меня нет принтера, подключенного
	// к первому параллельному порту.

	// Если бы у меня и был такой принтер, я не знаю, справился бы он со строкой из широких
	// символов, посланных на него указанным ниже способом. Поэтому я не стал переделывать
	// строку s1 в строку из широких символов wchar_t и оставил фразу в этой строке
	// на английском, как в оригинале, а не перевел на русский. По этой же причине я не стал
	// изменять класс ofstream на wofstream.

	// В современных операционных системах Windows можно вместо указанного здесь способа
	// для печати воспользоваться функциями Windows API.

	ofstream outfile;                // создать выходной поток
	outfile.open(L"PRN");            // связать его с первым параллельным портом
	if (outfile)
	{
		wcout << L"Выходной поток открыт успешно. Начинаю печать...\n";
		outfile << s1 << n1 << endl; // послать данные на принтер
		outfile << '\x0C';           // прогнать лист, чтобы выбросить его из принтера
	}
	wcout << L"Не получается открыть PRN!\n";

	return 0;
}
