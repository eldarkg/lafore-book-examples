// исходный текст программы сохранен в кодировке UTF-8 с сигнатурой

// ptrsort.cpp
// сортировка элементов массива по возрастанию с использованием указателей

#include <locale>
#include <iostream>
using namespace std;

int main()
{
	// переключение стандартного потока вывода в формат Юникода
	locale::global(locale("ru_RU.UTF-8"));

	void bsort(int*, int);      // прототип функции
	const int N = 10;           // размер массива
								// массив для сортировки
	int arr[N] = { 37, 84, 62, 91, 11, 65, 57, 28, 19, 49 };

	bsort(arr, N);              // сортируем массив
	
	for (int j = 0; j < N; j++) // выводим на экран отсортированный массив
		wcout << arr[j] << L" ";
	wcout << endl;

	return 0;
}

// функция реализует упорядочивание элементов массива по возрастанию
// (используется «сортировка методом пузырька», по-английски «bubble sort»)
// (ptr — указатель на массив, n — количество элементов в массиве)
void bsort(int* ptr, int n)
{
	void order(int*, int*); // прототип функции
	int j, k;               // индексы в нашем массиве

	for (j = 0; j < n - 1; j++)      // внешний цикл
		for (k = j + 1; k < n; k++)  // внутренний цикл
			order(ptr + j, ptr + k); // упорядочим два выбранных элемента
}

// функция упорядочивает два числа по возрастанию
void order(int* numb1, int* numb2)
{
	if (*numb1 > *numb2)   // если первое число больше второго,
	{
		int temp = *numb1; // то меняем их местами
		*numb1 = *numb2;
		*numb2 = temp;
	}
}